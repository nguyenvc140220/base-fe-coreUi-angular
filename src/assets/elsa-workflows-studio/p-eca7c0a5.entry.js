import{r as t,h as s}from"./p-ee0b9025.js";import{S as e}from"./p-f3f2f442.js";import{T as i}from"./p-6b50e59c.js";import{g as o}from"./p-8c22d910.js";import{b as n}from"./p-6f3ac5fa.js";import"./p-83f217d4.js";import"./p-4e7382b2.js";import"./p-e0c1fede.js";import"./p-f1ec68ec.js";import"./p-a3b5bd35.js";import"./p-80de33dc.js";import"./p-d17a08e5.js";import"./p-9f020d74.js";import"./p-82db2ff5.js";import"./p-949334ec.js";let r=class{constructor(s){t(this,s),this.selectList={items:[],isFlagsEnum:!1},this.reloadSelectListFromDeps=async t=>{const s={};for(const t of this.propertyDescriptor.options.context.dependsOnValue){const e=this.activityModel.properties.find((s=>s.name==t));s[t]=e.expressions.Literal}const e=t.currentTarget;s[e.id]=e.value;let i={context:Object.assign(Object.assign({},this.propertyDescriptor.options.context),{depValues:s}),runtimeSelectListProviderType:this.propertyDescriptor.options.runtimeSelectListProviderType};this.selectList=await o(this.serverUrl,{options:i});let r=await n("#"+this.propertyDescriptor.name);const a=this.propertyDescriptor.defaultValue;if(a)this.currentValue=a;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}requestAnimationFrame((()=>{r.dispatchEvent(new Event("change"))}))}}async componentWillLoad(){var t,s;const i=this.propertyDescriptor.defaultSyntax||e.Literal;this.currentValue=this.propertyModel.expressions[i]||void 0;const r=null===(s=null===(t=this.propertyDescriptor.options)||void 0===t?void 0:t.context)||void 0===s?void 0:s.dependsOnEvent;if(r){const t={};for(const s of r){for(const s of this.activityModel.properties)t[s.name]=s.expressions.Literal;const e=await n("#"+s);e.addEventListener("change",this.reloadSelectListFromDeps),t[s]=e.value}const s={context:Object.assign(Object.assign({},this.propertyDescriptor.options.context),{depValues:t}),runtimeSelectListProviderType:this.propertyDescriptor.options.runtimeSelectListProviderType};if(this.selectList=await o(this.serverUrl,{options:s}),null==this.currentValue){const t=this.propertyDescriptor.defaultValue;if(t)this.currentValue=t;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}}}else if(this.selectList=await o(this.serverUrl,this.propertyDescriptor),null==this.currentValue){const t=this.propertyDescriptor.defaultValue;if(t)this.currentValue=t;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}}null!=this.currentValue&&(this.propertyModel.expressions[i]=this.currentValue)}onChange(t){this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||e.Literal]=this.currentValue=t.target.value}onDefaultSyntaxValueChanged(t){this.currentValue=t.detail}render(){const t=this.propertyDescriptor,e=this.propertyModel,i=t.name,o=i,n=i;let r=this.currentValue;const{items:a}=this.selectList;if(null==r){const t=this.propertyDescriptor.defaultValue;r=t?t.toString():void 0}return s("elsa-property-editor",{activityModel:this.activityModel,propertyDescriptor:t,propertyModel:e,onDefaultSyntaxValueChanged:t=>this.onDefaultSyntaxValueChanged(t),"single-line":!0},s("select",{id:o,name:n,onChange:t=>this.onChange(t),class:"elsa-mt-1 elsa-block focus:elsa-ring-blue-500 focus:elsa-border-blue-500 elsa-w-full elsa-shadow-sm sm:elsa-max-w-xs sm:elsa-text-sm elsa-border-gray-300 elsa-rounded-md"},a.map((t=>{const e="object"==typeof t,i=e?t.value:t.toString(),o=e?t.text:t.toString();return s("option",{value:i,selected:i===r},o)}))))}};i.injectProps(r,["serverUrl"]);export{r as elsa_dropdown_property}